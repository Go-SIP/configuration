# Generated by mimic. DO NOT EDIT.
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: observatorium
objects:
- apiVersion: v1
  data:
    rbac.yaml: |
      roleBindings:
      - name: test
        roles:
        - read-write
        subjects:
        - kind: user
          name: user
      roles:
      - name: read-write
        permissions:
        - read
        - write
        resources:
        - metrics
        - logs
        - traces
        tenants:
        - test-oidc
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: api
      app.kubernetes.io/instance: observatorium-xyz
      app.kubernetes.io/name: observatorium-api
      app.kubernetes.io/part-of: observatorium
    name: observatorium-xyz-observatorium-api
    namespace: ${NAMESPACE}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: api
      app.kubernetes.io/instance: observatorium-xyz
      app.kubernetes.io/name: observatorium-api
      app.kubernetes.io/part-of: observatorium
    name: observatorium-xyz-observatorium-api
    namespace: ${NAMESPACE}
  spec:
    replicas: 3
    selector:
      matchLabels:
        app.kubernetes.io/component: api
        app.kubernetes.io/instance: observatorium-xyz
        app.kubernetes.io/name: observatorium-api
        app.kubernetes.io/part-of: observatorium
        app.kubernetes.io/version: ${OBSERVATORIUM_API_IMAGE_TAG}
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: api
          app.kubernetes.io/instance: observatorium-xyz
          app.kubernetes.io/name: observatorium-api
          app.kubernetes.io/part-of: observatorium
        namespace: ${NAMESPACE}
      spec:
        containers:
        - args:
          - --web.listen=0.0.0.0:8080
          - --web.internal.listen=0.0.0.0:8081
          - --grpc.listen=0.0.0.0:8090
          - --internal.tracing.endpoint=0.0.0.0:6831
          - --log.level=${OBSERVATORIUM_API_LOG_LEVEL}
          - --rbac.config=/etc/observatorium/rbac.yaml
          - --tenants.config=/etc/observatorium/tenants.yaml
          - --middleware.rate-limiter.grpc-address=observatorium-xyz-gubernator.${NAMESPACE}.svc.cluster.local:8081
          - --metrics.read.endpoint=http://observatorium-xyz-thanos-query-frontend.${NAMESPACE}.svc.cluster.local:9090
          - --metrics.write.endpoint=http://observatorium-xyz-thanos-receive.${NAMESPACE}.svc.cluster.local:19291
          - --metrics.rules.endpoint=http://observatorium-xyz-rules-objstore.${NAMESPACE}.svc.cluster.local:8080
          - --logs.read.endpoint=http://observatorium-xyz-loki-query-frontend-http.${NAMESPACE}.svc.cluster.local:3100
          - --logs.tail.endpoint=http://observatorium-xyz-loki-querier-http.${NAMESPACE}.svc.cluster.local:3100
          - --logs.write.endpoint=http://observatorium-xyz-loki-distributor-http.${NAMESPACE}.svc.cluster.local:3100
          - --logs.rules.endpoint=http://observatorium-xyz-loki-ruler-http.${NAMESPACE}.svc.cluster.local:3100
          - --traces.write.endpoint=observatorium-xyz-otel-collector:4317
          - --experimental.traces.read.endpoint-template=http://observatorium-xyz-jaeger-query.${NAMESPACE}.svc.cluster.local:16686/
          image: ${OBSERVATORIUM_API_IMAGE}:${OBSERVATORIUM_API_IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /live
              port: 8080
              scheme: HTTP
            periodSeconds: 30
          name: observatorium-api
          ports:
          - containerPort: 8090
            name: grpc-public
          - containerPort: 8081
            name: internal
          - containerPort: 8080
            name: public
          readinessProbe:
            failureThreshold: 12
            httpGet:
              path: /ready
              port: 8081
              scheme: HTTP
            periodSeconds: 5
          resources:
            limits:
              cpu: "3"
              memory: 3000Mi
            requests:
              cpu: "2"
              memory: 2000Mi
          volumeMounts:
          - mountPath: /etc/observatorium/rbac.yaml
            name: rbac
            readOnly: true
            subPath: rbac.yaml
          - mountPath: /etc/observatorium/tenants.yaml
            name: tenants
            readOnly: true
            subPath: tenants.yaml
        serviceAccountName: observatorium-xyz-observatorium-api
        volumes:
        - configMap:
            name: observatorium-xyz-observatorium-api
          name: rbac
        - name: tenants
          secret:
            secretName: observatorium-xyz-observatorium-api
  status: {}
- apiVersion: v1
  kind: Secret
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: api
      app.kubernetes.io/instance: observatorium-xyz
      app.kubernetes.io/name: observatorium-api
      app.kubernetes.io/part-of: observatorium
    name: observatorium-xyz-observatorium-api
    namespace: ${NAMESPACE}
  stringData:
    tenants.yaml: |
      tenants:
      - id: 1610b0c3-c509-4592-a256-a1871353dbfa
        name: test-oidc
        oidc:
          clientID: observatorium
          issuerURL: http://hydra.hydra.svc.cluster.local:4444/
        rateLimits:
        - endpoint: /api/metrics/v1/.+/api/v1/receive
          limit: 1000
          window: 1s
        - endpoint: /api/logs/v1/.*
          limit: 1000
          window: 1s
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: api
      app.kubernetes.io/instance: observatorium-xyz
      app.kubernetes.io/name: observatorium-api
      app.kubernetes.io/part-of: observatorium
    name: observatorium-xyz-observatorium-api
    namespace: ${NAMESPACE}
  spec:
    ports:
    - appProtocol: h2c
      name: grpc-public
      port: 8090
      targetPort: 8090
    - appProtocol: http
      name: internal
      port: 8081
      targetPort: 8081
    - appProtocol: http
      name: public
      port: 8080
      targetPort: 8080
    selector:
      app.kubernetes.io/component: api
      app.kubernetes.io/instance: observatorium-xyz
      app.kubernetes.io/name: observatorium-api
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: ${OBSERVATORIUM_API_IMAGE_TAG}
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: api
      app.kubernetes.io/instance: observatorium-xyz
      app.kubernetes.io/name: observatorium-api
      app.kubernetes.io/part-of: observatorium
    name: observatorium-xyz-observatorium-api
    namespace: ${NAMESPACE}
- apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    creationTimestamp: null
    labels:
      name: observatorium-api
    name: observatorium-xyz-observatorium-api
    namespace: ${NAMESPACE}
  spec:
    endpoints:
    - bearerTokenSecret:
        key: ""
      port: internal
    namespaceSelector:
      matchNames:
      - ${NAMESPACE}
    selector:
      matchLabels:
        app.kubernetes.io/component: api
        app.kubernetes.io/instance: observatorium-xyz
        app.kubernetes.io/name: observatorium-api
        app.kubernetes.io/part-of: observatorium
parameters:
- name: OBSERVATORIUM_API_IMAGE
  value: quay.io/observatorium/api
- name: OBSERVATORIUM_API_IMAGE_TAG
  value: main-2023-01-24-v0.1.2-318-g5f4fdf4
- name: NAMESPACE
  value: observatorium
- name: OBSERVATORIUM_API_LOG_LEVEL
  value: debug
