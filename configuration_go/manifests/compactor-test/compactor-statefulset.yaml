# Generated by mimic. DO NOT EDIT.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: database-compactor
    app.kubernetes.io/instance: observatorium
    app.kubernetes.io/name: thanos-compact
    app.kubernetes.io/part-of: observatorium
    app.kubernetes.io/version: v0.31.0
  name: thanos-compact
  namespace: observatorium
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: database-compactor
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-compact
      app.kubernetes.io/part-of: observatorium
  serviceName: thanos-compact
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: database-compactor
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: thanos-compact
        app.kubernetes.io/part-of: observatorium
        app.kubernetes.io/version: v0.31.0
      namespace: observatorium
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - thanos-compact
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - observatorium
              namespaces:
              - observatorium
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - compact
        - --block-viewer.global.sync-block-interval=5s
        - --objstore.config=$(OBJSTORE_CONFIG)
        env:
        - name: OBJSTORE_CONFIG
          valueFrom:
            secretKeyRef:
              key: object_store_config
              name: thanos.yaml
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws_access_key_id
              name: name
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws_secret_access_key
              name: name
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: quay.io/thanos/thanos:v0.31.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /-/healthy
            port: 10902
          periodSeconds: 30
        name: thanos
        ports:
        - containerPort: 10902
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 20
          httpGet:
            path: /-/healthy
            port: 10902
          periodSeconds: 5
        resources:
          limits:
            cpu: "3"
            memory: 3000Mi
          requests:
            cpu: "2"
            memory: 2000Mi
        terminationMessagePolicy: FallbackToLogsOnError
      - args:
        - -provider=openshift
        - -https-address=:8443
        - -upstream=http://localhost:0
        - -openshift-service-account=thanos-compact
        - -tls-cert=/etc/tls/private/tls.crt
        - -tls-key=/etc/tls/private/tls.key
        - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
        - -cookie-secret-file=/etc/proxy/secrets/session_secret
        - -openshift-ca=/etc/pki/tls/cert.pem
        - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        image: quay.io/openshift/origin-oauth-proxy:4.13.0
        imagePullPolicy: IfNotPresent
        name: oauth-proxy
        ports:
        - containerPort: 8443
          name: htttps
        resources:
          limits:
            cpu: 50m
            memory: 200Mi
          requests:
            cpu: 25m
            memory: 200Mi
        volumeMounts:
        - mountPath: /etc/tls/private
          name: compact-tls
        - mountPath: /etc/proxy/secrets
          name: compact-proxy
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
      serviceAccountName: thanos-compact
      terminationGracePeriodSeconds: 120
      volumes:
      - name: compact-tls
        secret:
          secretName: compact-tls
      - name: compact-proxy
        secret:
          secretName: compact-proxy
  updateStrategy: {}
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: database-compactor
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: thanos-compact
        app.kubernetes.io/part-of: observatorium
      name: data
      namespace: observatorium
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
      storageClassName: gp2-csi
    status: {}
status:
  availableReplicas: 0
  replicas: 0
