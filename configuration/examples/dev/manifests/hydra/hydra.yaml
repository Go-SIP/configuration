---
# Source: hydra/charts/hydra-maester/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hydra-hydra-maester-account
  namespace:  default
---
# Source: hydra/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hydra
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "hydra"
    "app.kubernetes.io/version": "v1.10.5"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.23.1"
---
# Source: hydra/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hydra
  namespace: default
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "hydra"
    "app.kubernetes.io/version": "v1.10.5"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.23.1"
data:
  "config.yaml": |

    dangerousForceHttp: true
    serve:
      admin:
        port: 4445
      public:
        port: 4444
      tls:
        allow_termination_from:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
    urls:
      self:
        issuer: https://my-hydra/
---
# Source: hydra/charts/hydra-maester/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hydra-hydra-maester-role
rules:
  - apiGroups: ["hydra.ory.sh"]
    resources: ["oauth2clients", "oauth2clients/status"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["list", "watch", "create"]
---
# Source: hydra/charts/hydra-maester/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hydra-hydra-maester-role-binding
subjects:
  - kind: ServiceAccount
    name: hydra-hydra-maester-account # Service account assigned to the controller pod.
    namespace:  default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hydra-hydra-maester-role
---
# Source: hydra/charts/hydra-maester/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hydra-hydra-maester-role-default
  namespace:  default
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create"]
---
# Source: hydra/charts/hydra-maester/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hydra-hydra-maester-role-binding-default
  namespace:  default
subjects:
  - kind: ServiceAccount
    name: hydra-hydra-maester-account # Service account assigned to the controller pod.
    namespace:  default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hydra-hydra-maester-role-default
---
# Source: hydra/templates/service-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: hydra-admin
  namespace: default
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "hydra"
    "app.kubernetes.io/version": "v1.10.5"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.23.1"
    app.kubernetes.io/component: admin
spec:
  type: ClusterIP
  ports:
    - port: 4445
      targetPort: http-admin
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: hydra
    app.kubernetes.io/instance: hydra
---
# Source: hydra/templates/service-public.yaml
apiVersion: v1
kind: Service
metadata:
  name: hydra-public
  namespace: default
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "hydra"
    "app.kubernetes.io/version": "v1.10.5"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.23.1"
spec:
  type: ClusterIP
  ports:
    - port: 4444
      targetPort: http-public
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: hydra
    app.kubernetes.io/instance: hydra
---
# Source: hydra/charts/hydra-maester/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hydra-hydra-maester
  labels:
    app.kubernetes.io/name: hydra-maester
    helm.sh/chart: hydra-maester-0.23.1
    app.kubernetes.io/instance: hydra
    app.kubernetes.io/version: "v0.0.23"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: hydra-hydra-maester
      app.kubernetes.io/instance: hydra
  template:
    metadata:
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: hydra-hydra-maester
        app.kubernetes.io/instance: hydra
    spec:
      containers:
        - name: hydra-maester
          image: "oryd/hydra-maester:v0.0.25"
          imagePullPolicy: IfNotPresent
          command:
            - /manager
          args:
            - --metrics-addr=127.0.0.1:8080
            - --hydra-url=http://hydra-admin
            - --hydra-port=4445
          resources:
            {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
      serviceAccountName: hydra-hydra-maester-account
      automountServiceAccountToken: true
      nodeSelector:
---
# Source: hydra/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hydra
  namespace: default
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "hydra"
    "app.kubernetes.io/version": "v1.10.5"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.23.1"
  annotations:
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hydra
      app.kubernetes.io/instance: hydra
  template:
    metadata:
      labels:
        "app.kubernetes.io/name": "hydra"
        "app.kubernetes.io/instance": "hydra"
        "app.kubernetes.io/version": "v1.10.5"
        "app.kubernetes.io/managed-by": "Helm"
        "helm.sh/chart": "hydra-0.23.1"
      annotations:
    spec:
      volumes:
        - name: hydra-config-volume
          configMap:
            name: hydra
      serviceAccountName: hydra
      automountServiceAccountToken: true
      containers:
        - name: hydra
          image: "oryd/hydra:latest-sqlite"
          imagePullPolicy: IfNotPresent
          command: ["hydra"]
          volumeMounts:
            - name: hydra-config-volume
              mountPath: /etc/config
              readOnly: true
          args: [
            "serve",
            "all",
            "--config",
            "/etc/config/config.yaml"
          ]
          ports:
            - name: http-public
              containerPort: 4444
              protocol: TCP
            - name: http-admin
              containerPort: 4445
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/alive
              port: http-admin
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http-admin
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 10
          env:
            - name: URLS_SELF_ISSUER
              value: "https://my-hydra/"
            - name: DSN
              valueFrom:
                secretKeyRef:
                  name: hydra
                  key: dsn
            - name: SECRETS_SYSTEM
              valueFrom:
                secretKeyRef:
                  name: hydra
                  key: secretsSystem
            - name: SECRETS_COOKIE
              valueFrom:
                secretKeyRef:
                  name: hydra
                  key: secretsCookie
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 100
          lifecycle:
            {}
---
# Source: hydra/templates/job-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hydra-job
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "hydra"
    "app.kubernetes.io/version": "v1.10.5"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.23.1"
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "0"
---
# Source: hydra/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hydra
  namespace: default
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "hydra"
    "app.kubernetes.io/version": "v1.10.5"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.23.1"
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "0"
    helm.sh/resource-policy: keep
type: Opaque
data:
  # Generate a random secret if the user doesn't give one. User given password has priority
  secretsSystem: "Z1VRWUI1amF5WXZCNVlmSWN1NUZyVVNIMFJZRnBKaWg="
  secretsCookie: "Nm1tMW9ENVMxUkZMSk5VUUxhT3RRVjZVbTRYWWNjd3I="
  dsn: "bWVtb3J5"
---
# Source: hydra/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "hydra-test-connection"
  namespace: default
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "hydra"
    "app.kubernetes.io/version": "v1.10.5"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.23.1"
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: healthcheck-ready
      image: busybox
      command: ['wget']
      args:  ['hydra-admin:4445/health/ready']
  restartPolicy: Never
